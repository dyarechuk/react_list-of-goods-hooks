{"version":3,"sources":["variables/variables.ts","components/GoodList/GoodList.tsx","services/getPreparedGoods/getPreparedGoods.tsx","App.tsx","index.tsx"],"names":["SortType","GoodList","goods","map","good","goodsFromServer","App","useState","isReversed","setIsReversed","DEFAULT","sortField","setSortField","visibleGoods","preparedGoods","sort","good1","good2","SORT_BY_ALPHABET","localeCompare","SORT_BY_LENGTH","length","reverse","getPreparedGoods","className","type","cn","onClick","ReactDOM","render","document","getElementById"],"mappings":"6KAaYA,E,mECTCC,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,S,ODRAC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGUL,K,4BAAAA,E,wBAAAA,E,YAAAA,M,KEXL,ICMMM,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAkCF,mBAASP,EAASU,SAApD,mBAAOC,EAAP,KAAkBC,EAAlB,KAEMC,EDVwB,SAC9BX,EACAS,EACAH,GAEA,IAAMM,EAAa,YAAOZ,GAmB1B,OAjBIS,GACFG,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQN,GACN,KAAKX,EAASkB,iBACZ,OAAOF,EAAMG,cAAcF,GAC7B,KAAKjB,EAASoB,eACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAC9B,QACE,OAAO,MAKXb,GACFM,EAAcQ,UAGTR,ECdcS,CACnBlB,EACAM,EACAH,GAGF,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYf,IAAcX,EAASkB,mBAEvCS,QAAS,kBAAMf,EAAaZ,EAASkB,mBAPvC,iCAYA,wBACEO,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYf,IAAcX,EAASoB,iBAEvCO,QAAS,kBAAMf,EAAaZ,EAASoB,iBAPvC,4BAYA,wBACEK,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAalB,IAEjBmB,QAAS,kBAAMlB,GAAeD,IAPhC,sBAYEA,GAAcG,IACd,wBACEc,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPf,EAAaZ,EAASU,SACtBD,GAAc,IALlB,sBAaJ,cAAC,EAAD,CAAUP,MAAOW,QCpEvBe,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.554e79a7.chunk.js","sourcesContent":["export const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport enum SortType {\n  SORT_BY_ALPHABET = 'alphabet',\n  SORT_BY_LENGTH = 'length',\n  DEFAULT = '',\n}\n","type Props = {\n  goods: string[],\n};\n\nexport const GoodList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        key={good}\n        data-cy=\"Good\"\n      >\n        {good}\n      </li>\n    ))}\n  </ul>\n);\n","import { SortType } from '../../variables/variables';\n\nexport const getPreparedGoods = (\n  goods: string[],\n  sortField: SortType,\n  isReversed: boolean,\n): string[] => {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SortType.SORT_BY_ALPHABET:\n          return good1.localeCompare(good2);\n        case SortType.SORT_BY_LENGTH:\n          return good1.length - good2.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n};\n","import React, { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport { GoodList } from './components/GoodList';\nimport { getPreparedGoods } from './services/getPreparedGoods/getPreparedGoods';\nimport { SortType, goodsFromServer } from './variables/variables';\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortField, setSortField] = useState(SortType.DEFAULT);\n\n  const visibleGoods = getPreparedGoods(\n    goodsFromServer,\n    sortField,\n    isReversed,\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-info',\n            { 'is-light': sortField !== SortType.SORT_BY_ALPHABET },\n          )}\n          onClick={() => setSortField(SortType.SORT_BY_ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-success',\n            { 'is-light': sortField !== SortType.SORT_BY_LENGTH },\n          )}\n          onClick={() => setSortField(SortType.SORT_BY_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {(isReversed || sortField) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortField(SortType.DEFAULT);\n              setIsReversed(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <GoodList goods={visibleGoods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}